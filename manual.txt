Author(s): Sijbren van Vaals, Indy van Boven

How to run the program:
python3 main.py path/file1 path/file2

Where path/file1 is a path to the srt file containing the subtitles from the movie. 
Where path/file2 is a path to the txt file containing the script from the movie.

For instance:
python3 main.py movies/mission_impossible/mi.srt movies/mission_impossible/mi.txt


Project:
The goal is to create a preprocessing tool that aligns the matching subtitles and lines in the script. To learn to work together via a version control system, in this case GitHub. The project takes two files in the command line, a srt file and a txt file. The project consists of a user interface that helps when incorrect files are given in the command line. The main program then invokes labels.py where the lines in the script are labelled for scene boundary (S), scene description (N), dialogues (D), characternames (C) and metadata (M). Main.py then invokes loadsubtitle.py where the subtitles are put into a dictionnary and returned to main. Thereafter, main.py write the labelled script to a txt file. Following, main.py invokes matches.py which then returns a list of matching lines, character names, timestamps and tags.


Team:
Taede: loadsubtitle.py, matches.py (timestamps, characternames, tags subtitles/script), main.py (comparing matches subtitles and script)
Carmen: unit tests (for each function), clean.py, loadsubtitle.py
Indy: labels.py (S scene description, N scene boundary, D dialogue, C charactername, M metadata for lines in script), unit tests with Carmen, manual
Sijbren: user interface in main.py, loadsubtitle.py, manual, csv output, main.py (comparing matches subtitles and script)
Everyone helped each other with the functions, and there were many discord calls.

